{"version":3,"file":"static/js/411.0d077acf.chunk.js","mappings":"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","sources":["webpack://rent_a_car/./src/pages/UpdateCar.module.css?f63d","pages/UpdateCar.tsx","webpack://rent_a_car/./src/ui/Input.module.css?de81","ui/Input.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_details\":\"UpdateCar_form_details__FiHd1\",\"update_car\":\"UpdateCar_update_car__NibrK\",\"car_id\":\"UpdateCar_car_id__oeCaZ\",\"right\":\"UpdateCar_right__E2yLj\",\"spinner\":\"UpdateCar_spinner__QXTgA\"};","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Input from \"../ui/Input\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport styles from \"./UpdateCar.module.css\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { CarData, RequestDetails } from \"../assets/types\";\r\nimport {KEY_CARS_DATA,BASIC_CAR_REQUEST_URL,VALID_SELECT_OPTIONS} from \"../assets/constants\";\r\n\r\nconst UpdateCar = () => {\r\n\r\n  let pageContent;\r\n  const [carId, setCarId] = useState(\"\");\r\n  const [availability, setAvailability] = useState(\"true\");\r\n  const NotificationLazy = lazy(() => import(\"../ui/Notification\"));\r\n  const { isLoading, error, sendRequest: updateCarData } = useFetch(KEY_CARS_DATA);\r\n\r\n  const updateCarId = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setCarId(e.target.value);\r\n  };\r\n\r\n  const updateAvailability = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setAvailability(e.target.value);\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    return (\r\n      carId &&\r\n      availability &&\r\n      +carId >= 100 &&\r\n      +carId <= 200 &&\r\n      VALID_SELECT_OPTIONS.includes(availability)\r\n    );\r\n  };\r\n\r\n  const updateCarDetails = () => {\r\n    const isValid = isFormValid();\r\n    if (isValid) {\r\n      const PUT_CAR_REQUEST: RequestDetails = {\r\n        url: `${BASIC_CAR_REQUEST_URL}/${carId}?isAvailable=${availability}`,\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      };\r\n      updateCarData(PUT_CAR_REQUEST);\r\n    }\r\n  };\r\n\r\n  let cachedCarsIds = [];\r\n  const cachedCars = JSON.parse(localStorage.getItem(KEY_CARS_DATA) || '\"\"');\r\n  if (cachedCars) {\r\n    cachedCarsIds = cachedCars\r\n      .map((car: CarData) => car.id)\r\n      .sort((a: number, b: number) => (a > b ? 1 : -1));\r\n  }\r\n\r\n  if (isLoading) {\r\n    pageContent = (\r\n      <div className={styles.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  else if (error) {\r\n    pageContent = (\r\n      <Suspense fallback={<CircularProgress />}>\r\n        <NotificationLazy message={error} />\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    pageContent = (\r\n    <>\r\n      <h2>Update an existing car</h2>\r\n      <form onSubmit={updateCarDetails} className={styles.form_details}>\r\n          <div className={styles.left}>\r\n            {cachedCarsIds.length > 0 ? \r\n            (\r\n              <div className={styles.car_id}>\r\n                <label>Please Select Car ID:</label>\r\n                <select onChange={updateCarId}>\r\n                  <option value=\"Please select\">Please select</option>\r\n                  {cachedCarsIds.map((existingId: number) => (\r\n                  <option key={existingId} value={existingId}>\r\n                      {existingId}\r\n                  </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            ) \r\n            : \r\n            (\r\n              <Input\r\n                  label=\"Please Enter Car ID:\"\r\n                  id=\"id\" type=\"number\"\r\n                  min=\"100\" max=\"200\"\r\n                  value={carId}\r\n                  onChange={updateCarId}\r\n                  placeholder=\"Please enter car id\"\r\n                />\r\n            )}\r\n            </div>\r\n\r\n            <div className={styles.right}>\r\n              <label>Is Car Available?</label>\r\n              <select required onChange={updateAvailability}>\r\n                <option value=\"true\">True</option>\r\n                <option value=\"false\">False</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className={styles.actions}>\r\n              <button type=\"submit\">Update</button>\r\n            </div>\r\n          </form>\r\n    </>)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={styles.update_car}>\r\n     {pageContent}   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCar;","// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Input_control__CBLWO\"};","import React from 'react';\r\nimport {InputProps} from '../assets/types';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = (props: InputProps) => {\r\n  const {id, label, ...rest} = props;\r\n  return(\r\n    <p className={styles.control}>\r\n      <label htmlFor={id}>{label}</label>\r\n      <input id={id} name={id} required {...rest}/>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Input;"],"names":["UpdateCar","pageContent","carId","setCarId","useState","availability","setAvailability","NotificationLazy","lazy","isLoading","error","sendRequest","updateCarData","useFetch","KEY_CARS_DATA","updateCarId","e","target","value","updateAvailability","updateCarDetails","VALID_SELECT_OPTIONS","includes","PUT_CAR_REQUEST","url","concat","BASIC_CAR_REQUEST_URL","method","headers","cachedCarsIds","cachedCars","JSON","parse","localStorage","getItem","map","car","id","sort","a","b","_jsx","className","styles","spinner","children","CircularProgress","Suspense","fallback","message","_jsxs","_Fragment","onSubmit","form_details","left","length","car_id","onChange","existingId","Input","label","type","min","max","placeholder","right","required","actions","update_car","props","rest","htmlFor","name"],"sourceRoot":""}