{"version":3,"file":"static/js/390.f729d578.chunk.js","mappings":"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","sources":["webpack://rent_a_car/./src/pages/AddNewCar.module.css?d6f1","pages/AddNewCar.tsx","webpack://rent_a_car/./src/ui/Input.module.css?de81","ui/Input.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"new_car\":\"AddNewCar_new_car__hBTBy\",\"new_car_form\":\"AddNewCar_new_car_form__aXYE+\",\"new_car_form_fields\":\"AddNewCar_new_car_form_fields__IzR2r\",\"actions\":\"AddNewCar_actions__RqhDT\",\"error\":\"AddNewCar_error__arIEr\",\"spinner\":\"AddNewCar_spinner__t34n-\"};","import React, { useState, lazy, Suspense } from \"react\";\r\nimport Input from \"../ui/Input\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport styles from \"./AddNewCar.module.css\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { RequestDetails, CarData } from \"../assets/types\";\r\nimport { KEY_CARS_DATA, ERROR_ID_EXISTS_PREFIX, ERROR_ID_EXISTS_SUFFIX, BASIC_CAR_REQUEST_URL, ERROR_OPTION_NOT_VALID } from \"../assets/constants\";\r\n\r\nconst AddNewCar = () => {\r\n\r\n  let pageContent;\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const NotificationLazy = lazy(() => import(\"../ui/Notification\"));\r\n  const { isLoading, error, sendRequest: postCarsData } = useFetch(KEY_CARS_DATA);\r\n\r\n\r\n  const updateStorage = (carToAdd: CarData) => {\r\n    const cachedData = localStorage.getItem(KEY_CARS_DATA);\r\n    if (cachedData) {\r\n      let cachedDataObj = JSON.parse(cachedData);\r\n      cachedDataObj.push({\r\n        ...carToAdd,\r\n        id:+carToAdd.id\r\n      });\r\n      localStorage.setItem(KEY_CARS_DATA, JSON.stringify(cachedDataObj));\r\n    }\r\n  }\r\n\r\n  const callToAddNewCar = (carToAdd: any) => {\r\n    setErrorMsg(\"\");\r\n    const POST_CAR_REQUEST: RequestDetails = {\r\n      url: BASIC_CAR_REQUEST_URL,\r\n      method: \"POST\",\r\n      body: carToAdd,\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    };\r\n    postCarsData(POST_CAR_REQUEST, () => updateStorage(carToAdd));\r\n  }\r\n\r\n  const handleSubmitForm = (event: any) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.target);\r\n    const newCarDataToAdd = Object.fromEntries(formData.entries());\r\n\r\n    if ((newCarDataToAdd.isAirCondition !== \"true\" &&  newCarDataToAdd.isAirCondition !== \"false\")\r\n        || (newCarDataToAdd.isAvailable !== \"true\" &&  newCarDataToAdd.isAvailable !== \"false\" ))\r\n         {\r\n          setErrorMsg(ERROR_OPTION_NOT_VALID);\r\n          return;\r\n    }\r\n\r\n    const cachedCars = JSON.parse(localStorage.getItem(KEY_CARS_DATA) || '\"\"');\r\n\r\n    if (error) {\r\n      setErrorMsg(error);\r\n    }\r\n    else if (cachedCars) {\r\n      const cachedCarsIds = cachedCars.map((car: CarData) => car.id);\r\n      \r\n      if (cachedCarsIds.includes(+newCarDataToAdd.id)) {\r\n        setErrorMsg(`${ERROR_ID_EXISTS_PREFIX} ${newCarDataToAdd.id} ${ERROR_ID_EXISTS_SUFFIX}`);\r\n      } \r\n      else {\r\n       callToAddNewCar(newCarDataToAdd);\r\n      }\r\n    } else {\r\n      callToAddNewCar(newCarDataToAdd);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    pageContent = (\r\n      <div className={styles.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  else if (error) {\r\n    pageContent = (\r\n      <Suspense fallback={<CircularProgress />}>\r\n        <NotificationLazy message={error} />\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    pageContent = (\r\n      <>\r\n        <h2>Add A New Car</h2>\r\n        <form onSubmit={handleSubmitForm} className={styles.new_car_form}>\r\n          <div className={styles.new_car_form_fields}>\r\n            <div className={styles.left}>\r\n              <Input label=\"Car ID\" id=\"id\" type=\"number\" min=\"100\" max=\"200\"/>\r\n              <Input label=\"Car Model\" id=\"model\" type=\"text\" />\r\n              <Input label=\"Number Of Seats\" id=\"numOfSeats\" type=\"number\" min=\"2\" max=\"10\"/>\r\n              <Input label=\"Number Of Doors\" id=\"numOfDoors\" type=\"number\" min=\"2\" max=\"5\"/>\r\n            </div>\r\n            <div className={styles.right}>\r\n              <Input label=\"Fuel Capacity\" id=\"fuelCapacity\" type=\"number\"min=\"30\" max=\"100\"/>\r\n              <Input label=\"Air Condition?\" id=\"isAirCondition\" type=\"text\" />\r\n              <Input label=\"Is Available?\" id=\"isAvailable\" type=\"text\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.error}>\r\n            {errorMsg.length > 0 && <p>{errorMsg}</p>}\r\n          </div>\r\n\r\n          <div className={styles.actions}>\r\n            <input type=\"reset\" value=\"Clear\" onClick={() => setErrorMsg(\"\")}/>\r\n            <button type=\"submit\">Add</button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={styles.new_car}>\r\n      {pageContent}   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCar;","// extracted by mini-css-extract-plugin\nexport default {\"control\":\"Input_control__CBLWO\"};","import React from 'react';\r\nimport {InputProps} from '../assets/types';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = (props: InputProps) => {\r\n  const {id, label, ...rest} = props;\r\n  return(\r\n    <p className={styles.control}>\r\n      <label htmlFor={id}>{label}</label>\r\n      <input id={id} name={id} required {...rest}/>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Input;"],"names":["AddNewCar","pageContent","errorMsg","setErrorMsg","useState","NotificationLazy","lazy","isLoading","error","sendRequest","postCarsData","useFetch","KEY_CARS_DATA","callToAddNewCar","carToAdd","POST_CAR_REQUEST","url","BASIC_CAR_REQUEST_URL","method","body","headers","cachedData","localStorage","getItem","cachedDataObj","JSON","parse","push","id","setItem","stringify","updateStorage","handleSubmitForm","event","preventDefault","formData","FormData","target","newCarDataToAdd","Object","fromEntries","entries","isAirCondition","isAvailable","ERROR_OPTION_NOT_VALID","cachedCars","map","car","includes","concat","ERROR_ID_EXISTS_PREFIX","ERROR_ID_EXISTS_SUFFIX","_jsx","className","styles","spinner","children","CircularProgress","Suspense","fallback","message","_jsxs","_Fragment","onSubmit","new_car_form","new_car_form_fields","left","Input","label","type","min","max","right","length","actions","value","onClick","new_car","props","rest","htmlFor","name","required"],"sourceRoot":""}